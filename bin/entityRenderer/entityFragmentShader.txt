#version 330

out vec4 out_Colour;

in vec3 pass_normal; // normalized normal from vertex shader

void main(void) {
	
	float near = 0.1, far = 20.0; // znear and zfar values of the view frustum
	
	// make depth grow linearly (approximation)
	float z = gl_FragCoord.z*2.0-1.0; 
    float depth = (2.0*near*far) / (far+near-z*(far-near));
	depth /= far;
	
	// render the normal so that negative values can also be stored + corrected depth value
	out_Colour = vec4(pass_normal.x/2 + 0.5, pass_normal.y/2 + 0.5, pass_normal.z/2 + 0.5, depth);

}
